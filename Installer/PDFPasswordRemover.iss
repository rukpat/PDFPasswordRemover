; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#define MyAppName "Remove PDF Passwords"
#define MyAppVersion "1.7"
#define MyAppPublisher "Rukesh Patel"
#define MyAppURL "https://github.com/rukpat/PDFPasswordRemover"
#define MyAppExeName "PDFPasswordRemover.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{97572933-32E4-42EB-AFC4-E491ACA214BE}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
DisableProgramGroupPage=no
DefaultGroupName=Remove PDF Passwords
;AlwaysUsePersonalGroup=yes 
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
;PrivilegesRequired=admin
PrivilegesRequiredOverridesAllowed=dialog

LicenseFile=..\Installer\license.txt
InfoBeforeFile=..\Installer\BeforeInstallInstructions.txt
InfoAfterFile=..\Installer\AfterInstallationInstructions.txt

OutputDir=..\Installer\Winx64Installer
OutputBaseFilename=PDFPasswordRemoverWinx64Installer
SetupIconFile=..\Installer\PDFPasswordRemover.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "..\bin\Release\net8.0\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Release\net8.0\PDFPasswordRemover.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Release\net8.0\PDFPasswordRemover.runtimeconfig.json"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\bin\Release\net8.0\PdfSharpCore.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Installer\PDFPasswordRemover.ico"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
;Registry data from file ContextMenu.reg- Modified for path
Root: HKA; Subkey: "Software\Classes\Directory\shell\Remove PDF Passwords"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\Directory\shell\Remove PDF Passwords"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\PDFPasswordRemover.ico"""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\Directory\shell\Remove PDF Passwords\command"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\Directory\shell\Remove PDF Passwords\command"; ValueType: string; ValueName: ""; ValueData: """{app}\PDFPasswordRemover.exe"" ""%V"""; Flags: uninsdeletevalue
;End of registry data from file ContextMenu.reg


[Run]
; Run PowerShell script with elevated privileges and bypass execution policy
;Filename: "powershell.exe"; Parameters: "-ExecutionPolicy Bypass -File ""{app}\CreateContextMenu.ps1"""; Flags: runhidden nowait postinstall skipifsilent
; ;Filename: "powershell.exe"; Parameters: "-ExecutionPolicy Bypass -File ""{app}\CreateContextMenu.ps1"" > ""{app}\CCMrun.log"" 2>&1"; Flags: runhidden nowait postinstall skipifsilent shellexec
;Filename: "powershell.exe"; Parameters: "-ExecutionPolicy Bypass -File ""{app}\CreateContextMenu.ps1"" > ""{app}\CCMrun.log"" 2>&1"; Flags: postinstall skipifsilent shellexec
;runhidden nowait 

;Filename: "powershell.exe"; Parameters: "-NoProfile -ExecutionPolicy Bypass -File ""{app}\CreateContextMenu.ps1"" > ""{app}\CCMrun.log"" 2>&1"; Flags: runasoriginaluser postinstall skipifsilent shellexec
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon



