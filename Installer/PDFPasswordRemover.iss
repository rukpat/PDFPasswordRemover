; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Remove PDF Passwords"
#define MyAppVersion "1.5"
#define MyAppPublisher "Rukesh Patel"
#define MyAppURL "https://github.com/rukpat/PDFPasswordRemover"
#define MyAppExeName "PDFPasswordRemover.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{97572933-32E4-42EB-AFC4-E491ACA214BE}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
DisableProgramGroupPage=yes
LicenseFile=D:\OneDrive\0RPPersonal Dev Projects\Utilities\PDFPasswordRemover\Installer\license.txt
InfoBeforeFile=D:\OneDrive\0RPPersonal Dev Projects\Utilities\PDFPasswordRemover\Installer\BeforeInstallInstructions.txt
InfoAfterFile=D:\OneDrive\0RPPersonal Dev Projects\Utilities\PDFPasswordRemover\Installer\AfterInstallationInstructions.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=D:\OneDrive\0RPPersonal Dev Projects\Utilities\PDFPasswordRemover\Installer\WinInstaller
OutputBaseFilename=PDFPasswordRemoverWinInstaller
SetupIconFile=D:\OneDrive\0RPPersonal Dev Projects\Utilities\PDFPasswordRemover\Installer\pdf_broken_chain.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
; to run the powershell script
PrivilegesRequired=admin

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "D:\OneDrive\0RPPersonal Dev Projects\Utilities\PDFPasswordRemover\bin\Release\net8.0\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\OneDrive\0RPPersonal Dev Projects\Utilities\PDFPasswordRemover\Installer\pdf_broken_chain.ico"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\OneDrive\0RPPersonal Dev Projects\Utilities\PDFPasswordRemover\Installer\CreateContextMenu.ps1"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

;[Run]
; Run PowerShell script with elevated privileges and bypass execution policy
;Filename: "powershell.exe"; Parameters: "-ExecutionPolicy Bypass -File ""{app}\CreateContextMenu.ps1"""; Flags: runhidden nowait postinstall skipifsilent
; ;Filename: "powershell.exe"; Parameters: "-ExecutionPolicy Bypass -File ""{app}\CreateContextMenu.ps1"" > ""{app}\CCMrun.log"" 2>&1"; Flags: runhidden nowait postinstall skipifsilent shellexec
;Filename: "powershell.exe"; Parameters: "-ExecutionPolicy Bypass -File ""{app}\CreateContextMenu.ps1"" > ""{app}\CCMrun.log"" 2>&1"; Flags: postinstall skipifsilent shellexec
;runhidden nowait 
[Run]
Filename: "powershell.exe"; Parameters: "-NoProfile -ExecutionPolicy Bypass -File ""{app}\CreateContextMenu.ps1"" > ""{app}\CCMrun.log"" 2>&1"; Flags: runasoriginaluser postinstall skipifsilent shellexec


[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

